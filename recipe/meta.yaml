{% set name = "sdsl-lite" %}
{% set version = "2.1.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/simongog/{{ name }}/releases/download/v{{ version }}/{{ name }}-{{ version }}.tar.gz.offline.install.gz
  fn: {{ name }}.tar.gz # necessary because of the nonstandard file extension from upstream
  sha256: 2f192977b47406ae8992292c7e841ef23d4656bf72f6140540bed53af68e06ed
  patches:
    - 00-missing_stdcout.patch
    - 01-fix_version.patch
    - 05-remove_warning.patch
    - 10-default_verbose_install.patch
    - 15-fix_cmake.patch

build:
  number: 1002
  # TODO: fix Windows build/testing
  skip: true  # [win]
  #script: "del %SRC_DIR%\\build\\CMakeCache.txt && %SRC_DIR%\\install.bat %PREFIX%"  # [win]

requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake
    - make  # [linux]

test:
  requires:
    - {{ compiler('cxx') }}
    - make  # [linux]
  source_files:
    - Make.helper
    - examples
  commands:
    - cd examples && make all LIB_DIR=$PREFIX/lib INC_DIR=$PREFIX/include

about:
  home: https://github.com/simongog/sdsl-lite
  license: GPL-3.0-or-later
  license_family: GPL
  summary: 'The Succinct Data Structure Library (SDSL)'
  description: |
    The Succinct Data Structure Library (SDSL) is a powerful and flexible C++11
    library implementing succinct data structures. In total, the library contains
    the highlights of 40 research publications. Succinct data structures can
    represent an object (such as a bitvector or a tree) in space close to the
    information-theoretic lower bound of the object while supporting operations of
    the original object efficiently. The theoretical time complexity of an
    operation performed on the classical data structure and the equivalent
    succinct data structure are (most of the time) identical.
  dev_url: https://github.com/simongog/sdsl-lite
  license_file: '{{ environ["RECIPE_DIR"] }}/LICENSE'

extra:
  recipe-maintainers:
    - jvolkening
    - johnlees
